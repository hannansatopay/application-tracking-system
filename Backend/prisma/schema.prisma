// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Recruiter {
  org_id         String    @id @unique @default(cuid())
  first_name     String?
  last_name      String?
  email_verified String    @unique
  password       String
  website        String?
  description    String?
  location       String?
  email_hash     String?
  logo           String?
  country        String?
  date_joined    DateTime?  @default(now())
  last_join      DateTime?
  user_ip        String?
  user_agent     String?
  jobs           Job[]
}

model Job {
  job_id          String      @id @unique @default(cuid())
  org             Recruiter   @relation(fields: [org_id], references: [org_id])
  org_id          String
  title           String?
  description     String?
  posted_date     DateTime    @default(now())
  end_date        DateTime?
  job_type        String?
  stipend         Decimal?     @db.Decimal(10, 2)
  // questions       Question[]
  // answers         Answer[]
  no_of_openinigs Int
  job_seeker      Jobseeker[]
}

model Jobseeker {
  jobseeker_id String   @id @unique @default(cuid())
  job          Job      @relation(fields: [job_id], references: [job_id])
  job_id       String
  title        String?
  first_name   String?
  last_name    String?
  email        String?
  phone_number String?  @db.VarChar(20)
  resume       String?
  applied_date DateTime? @default(now())
  user_ip      String?
  user_agent   String?
  // Answer       Answer[]
}

// model Question {
//   question_id   String   @id @unique @default(cuid())
//   job           Job      @relation(fields: [job_id], references: [job_id])
//   job_id        String
//   question_text String
//   Answer        Answer[]
// }

// model Answer {
//   answer_id    String    @id @unique @default(cuid())
//   job          Job       @relation(fields: [job_id], references: [job_id])
//   job_id       String
//   jobseeker    Jobseeker @relation(fields: [jobseeker_id], references: [jobseeker_id])
//   jobseeker_id String
//   question     Question  @relation(fields: [question_id], references: [question_id])
//   question_id  String
//   answer_text  String
// }
